buildscript {
    ext {
        springBootVersion = '1.3.0.RC1'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'net.researchgate.release' version '2.3.4'
    id "com.github.samueltbrown.cucumber" version "0.9"
}

apply plugin: 'spring-boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')

    testCompile('org.springframework.boot:spring-boot-starter-test') 
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc:1.0.0.RC1')
    testCompile('org.assertj:assertj-core:3.2.0')
    testCompile('junit:junit:4.12')

    cucumberCompile('info.cukes:cucumber-java:1.2.4')
}

test {
    forkEvery = 5
    maxParallelForks = Runtime.runtime.availableProcessors() / 2
}

jar {
    baseName = 'carminp-nosql-api-${project.version}'
    version = project.version
}

sourceSets {
    test {
        java {
            srcDirs 'src/test/java'
        }
    }
}

release {
    preTagCommitMessage = 'release(tag) - pre tag commit: '
    tagCommitMessage = 'release(tag) - creating tag: '
    newVersionCommitMessage = 'release(tag) - new version commit: '
    tagTemplate = '${version}'

    git {
        requireBranch = 'master'
        pushToRemote = 'origin'
    }
}

cucumber {
    formats = ['pretty','json:build/cucumber.json','junit:build/cucumber.xml']
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}